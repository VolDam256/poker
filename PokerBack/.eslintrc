{
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es2021": true,
    "jest/globals": true
  },
  "plugins": [
    "react",
    "react-hooks",
    "prettier",
    "jest"
  ],
  "rules": {
    "linebreak-style": 0,
    "semi": 2,
    "curly": "error",
    "no-case-declarations": "off",
    "no-empty": 0,
    "quotes": 2,
    "comma-dangle": 0,
    // Omit with destructuring
    "no-unused-vars": "warn",
    "no-console": 2,
    "no-const-assign": 2,
    "no-dupe-class-members": 2,
    "no-duplicate-case": 2,
    "no-extra-parens": [2, "functions"],
    "no-self-compare": 2,
    "accessor-pairs": 2,
    "comma-spacing": [2, {
      "before": false,
      "after": true
    }],
    "max-len": ["error", { "code": 120 }],
    "constructor-super": 2,
    "new-cap": [2, {
      "newIsCap": true,
      "capIsNew": false
    }],
    "new-parens": 2,
    "no-array-constructor": 2,
    "no-class-assign": 2,
    "no-cond-assign": 2,
    "no-mixed-spaces-and-tabs": 0,
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-max-props-per-line": [2, { "maximum": 1, "when": "multiline" }],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/jsx-tag-spacing": [2, {
      "closingSlash": "never",
      "beforeSelfClosing": "always",
      "afterOpening": "never",
      "beforeClosing": "allow"
    }]
  },
  "overrides": [
    {
      "files": ["**/*.{js,jsx}"],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [".js", ".jsx"]
        },
        "import/resolver": {
          "typescript": {
            // "project": "./tsconfig.json"
            "project": "./jsconfig.json"
          }
        }
      },

      // Parser Settings
      // =================================
      // allow ESLint to understand TypeScript syntax
      // https://github.com/iamturns/eslint-config-airbnb-typescript/blob/master/lib/shared.js#L10
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        // Lint with Type Information
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/TYPED_LINTING.md
        // "project": "./tsconfig.json"
        "project": "./jsconfig.json"
      },

      // Plugins
      // =================================
      "plugins": ["@typescript-eslint"],

      // Extend Other Configs
      // =================================
      // TODO: Temporary disable eslint ts rules due to migration (selectors return untyped vars). Also disabled no-unused-vars
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        //        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "prettier"
      ],
      "rules": {
        "curly": "error",
        "react/react-in-jsx-scope": "off",
        // Turn of no-undef because it is covered by TS
        "no-undef": "off",
        "react/prop-types": [0]
      }
    }
  ]
}